{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "fileTypes": ["al"],
    "name": "riscal",
    "scopeName": "source.riscal",

    "patterns": [
        {
           "include": "#comments"
        },
        {
            "include": "#keywords"
        },
        {
            "include": "#operators"
        },
        {
            "include": "#types"
        },
        {
            "include": "#constants"
        },
        {
            "include": "#strings"
        }
    ],
    "repository": {
        "comments": {
            "patterns": [
                {
                    "name": "comment.line.double-slash",
                    "match": "\\/\\/.*$"
                },

                {
                    "name": "comment.block",
                    "match": "\\/\\*(.|\\n)*\\*\\/"
                }
            ]
        },

        "keywords": {
            "patterns": [
                {
                   "name": "keyword.control.riscal",
                   "match": "\\b(for|if|break|commit|else|while|return)\\b" 
                },

                {
                    "name": "keyword.other.unit",
                    "match": "\\b(Binary|Syntax|Semantics|Input|Output|Readport|Writeport|Src|Dst|Base|Size|AGRU|Bank|ECC_Enable|MemIf|AccessAddrSpace|Attribute|MaxAGRU|Protocal)\\b"
                },

                {
                    "name": "keyword.other.riscal",
                    "match": "\\b(namespace|Pipeline|PCReg|ArchRegFile|Operand|Memory|FuncUnit|Instruction|Issue|AddrSpace|Interface|Forward|stage|bind_to|pipe_stall|Label)\\b"
                }
            ]
        },

        "operators": {
            "patterns": [
                {
                    "name": "keyword.other.operator.riscal",
                    "match": "\\b(not|and|or)\\b|\\b(w/)|(=)|(!)|(<)|(>)|(\\+)|(-)|(\\*)|(\\/)|(\\^)|(%)|(\\|)|(\\&\\&\\&)|(\\~\\~\\~)|(\\.\\.\\.)|(\\.\\.)|(\\?)"       
                }
            ]
        },
        "types": {
            "patterns": [
                {
                    "name": "storage.type.riscal",
                    "match": "\\b(UInt[0-9]+|SInt[0-9]+|Float|Vec)\\b"  
                }   
            ]
        },

        "constants": {
            "patterns": [
              {
                "name": "constand.numeric",
                "match": "\\b([1-9][0-9]*|0x[0-9a-fA-F]+|0X[0-9a-fA-F]+)\\b"
              }   
            ]
        },


        "strings": {
            "patterns": [
              {
                "name": "string.quoted.double",
                "begin": "(\\$|)\"",
                "end": "\"",
                "patterns": [
                  {
                    "name": "constant.character.escape",
                    "match": "\\\\."
                  }
                ]
              }   
            ]
        }
    }
}